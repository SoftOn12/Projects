Как утилита работает?
1.  Запускается модуль, который определяет операционную систему и прочие характеристики для корректной работоспособности шифровальщика. 
2.	В случае успешной проверки системы на работоспособность, запускается процесс шифрования всех файлов (Ransomware malware).
3.	После завершения процесса, утилита закрывается, оставляя дешифратор на рабочем столе.

Класс Crypto.cs
Метод «generateKey» создает случайный ключ для дальнейшего шифрования.
Метод «encryptFile» Содержит в себе основную логику шифрования файлов. 
Сначала проверяется, не слишком ли огромный файл подлежит зашифровать, дальше в блоке «try-catch» пробуем шифровать файлы. 
Создаются два файловых потока: Исходный файл и его копию с новым расширением. 
После создается объект класса «RijndaelManaged», в свойствах которого указываются параметры шифрования. 
Шифруется исходный файл и через поток «cryptoOutput» копируется его в созданный ранее файл с новым расширением, после закрываются все потоки и удаляется исходный файл.
Метод «decryptFile» делает обратную работу. 
Сначала проверятся, есть ли расширение «.crypto», дальше также открываются 2 потока: Исходный файл и его копию, где удаляется модифицированное расширение. 
После создается объект класса «RijndaelManaged», в свойствах которого указываются параметры шифрования. 
Дешифруется файл и через поток «decryptedInput» копируется в созданный ранее файл со старым расширением, после закрываются все потоки и удаляется файл.

Класс FileUtils.cs
«Хэш-сет» «EXTENSIONS_FILTER» хранит в себе маски расширений, на наличие которых будут проверяться файлы ОС.
Метод «recursiveWalker» рекурсивно проходится по всем файлам ОС, как только он находит подходящий файл для модификации, он «сообщает» об этом. 

Класс hwid.cs
Метод «getCpuId» получает и сохраняет CPU ID процессора.
Метод «getBoardId» получает и сохраняет Board ID материнской платы.
Поле «SALT» является «Солью» для того, чтобы сделать наши CPU ID и Board ID более криптостойкими.

Класс SystemUtils.cs
В данном классе импортируются в проект API-функции «GetConsoleWindow» и «ShowWindow». 
Дальше они используются в методах «hideWindow» и «showWindow», которые скрывают и показывают консоль соответственно. 

Класс Porgram.cs
Данный класс является главным классом в проекте. 
Функция «Main» скрывает от пользователя консоль, и в зависимости от начальных аргументов, выполняет одно из действий: 
Либо вызвать метод «decryptFilesystem», который запустит расшифровку всех файлов, либо вызвать метод «encryptFilesystem», который запускает шифрование файлов.
Метод «encryptFilesystem» получает CPU ID и Board ID компьютера, после чего генерирует случайный ключ размером 32 символа и запускает метод шифрования файлов, 
в аргументы которого также передает CPU ID. Чтобы в дальнейшем расшифровать файлы, необходимо записать ключ в реестр, 
но также дополнительно его защитить посредством «XOR-а» с Board ID.
